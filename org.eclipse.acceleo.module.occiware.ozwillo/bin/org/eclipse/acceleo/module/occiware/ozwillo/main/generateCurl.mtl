[comment encoding = UTF-8 /]
[module generateCurl('http://schemas.ogf.org/occi')]

[comment NOT FINISHED NOR WORK PROPERLY BUT COULD BE REFERENCE FOR TEMPLATING /]

[comment Tip: CTRL+F11 to generate file/]
[template public generateElement(aConfiguration : Configuration)]
[comment @main/]
[file ('gen_DCProjectConf.sh', false, 'UTF-8')]
#!/bin/sh
[comment First POST the project, example: dcmp:Project_0/occiware_org /]
	[comment: properties file configured in GenerateCurlRest/]

PROP="-v -k "
CONTENT_TYPE="-H 'content-type: application/json'"
AUTH="-H 'Authorization: Bearer [getProperty('ozwillo_auth') /]'"

[for (resource : Resource | aConfiguration.resources)]
	echo "[resource.genBody()/]" | [resource.generateCurl()/]

[/for]

[comment Then POST the models (dcmo:model_0/occiware_org:Organization_0, occiware_org:geoArea_0)
	with value "dcmo:pointOfViewAbsoluteName" as the projectName (i.e. "occiware_org") to link them 
swagger search: /dc/type/dcmo:model_0?dcmo:isStorage=true&dcmo:pointOfViewAbsoluteName=org_1/]

[/file]
[/template]

[template public  generateCurl(entity: Entity) post (trim())]
[comment: get the resource project name, and its attibutes/]
echo "curl $PROP $CONTENT_TYPE $AUTH -X POST --data-binary @- [generateUrl(entity)/]"
#curl $PROP $CONTENT_TYPE $AUTH -X POST --data-binary @- [generateUrl(entity) /]
[/template]

[template public generateUrl(entity : Entity) post (trim())]
[comment: check if is a Project or a model /]
[comment: TODO : trying to fetch directly the term in the Kind (kind.term) get an empty value, which is weird !!! /]
[if (entity.kind.toString().strstr('term='+getProperty('res_match_project') ) )]
[getProperty('ozwillo_base_url')/][getProperty('ozwillo_path_type')/]/[getProperty('res_project_type')/]/[entity.id/]
[else] [comment: if is a model/]
[getProperty('ozwillo_base_url')/][getProperty('ozwillo_path_type')/]/[getProperty('res_model_type')/]/[entity.id/]
[/if]
[/template]


[template public  genBody(entity: Entity) post (trim())]
{id: string, properties: Map['['/]string,Object[']'/], 
dc:modified: string, @id: [entity.generateUrl()/],
modelType: string, dc:created: string,
dc:creator: string, dc:contributor: string,
@type: ['['/]string[']'/], "o:version": integer
}
[/template]